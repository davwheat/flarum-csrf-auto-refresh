{"version":3,"file":"forum.js","mappings":"MACA,IAAIA,EAAsB,CCA1BA,EAAyBC,IACxB,IAAIC,EAASD,GAAUA,EAAOE,WAC7B,IAAOF,EAAiB,QACxB,IAAM,EAEP,OADAD,EAAoBI,EAAEF,EAAQ,CAAEG,EAAGH,IAC5BA,GCLRF,EAAwB,CAACM,EAASC,KACjC,IAAI,IAAIC,KAAOD,EACXP,EAAoBS,EAAEF,EAAYC,KAASR,EAAoBS,EAAEH,EAASE,IAC5EE,OAAOC,eAAeL,EAASE,EAAK,CAAEI,YAAY,EAAMC,IAAKN,EAAWC,MCJ3ER,EAAwB,CAACc,EAAKC,IAAUL,OAAOM,UAAUC,eAAeC,KAAKJ,EAAKC,GCClFf,EAAyBM,IACH,oBAAXa,QAA0BA,OAAOC,aAC1CV,OAAOC,eAAeL,EAASa,OAAOC,YAAa,CAAEC,MAAO,WAE7DX,OAAOC,eAAeL,EAAS,aAAc,CAAEe,OAAO,M,+BCLvD,MAAM,EAA+BC,OAAOC,KAAKC,OAAO,a,aCUxDC,IAAAA,aAAAA,IAAqB,8BAA8B,WAEjD,IAAMC,EAA4E,GAAvDC,SAASF,IAAAA,MAAAA,UAAoB,wBAA+B,IAAQ,EAG9FG,OAAeC,sCAAwCC,aAAY,WAClEL,IAAAA,QAC0B,CAAEM,IAAKN,IAAAA,MAAAA,UAAoB,UAAY,gBAAiBO,OAAQ,SACvFC,MAAK,SAACC,GACL,IAAMC,EAAYD,EAASE,KAAKC,WAAWC,MAE3Cb,IAAAA,QAAAA,UAAwBU,KAL5B,OAOS,SAACI,GACNC,QAAQC,MAAR,iEACAD,QAAQE,MAAMH,GACdC,QAAQG,gBAEXjB,O","sources":["webpack://@davwheat/csrf-auto-refresh/webpack/bootstrap","webpack://@davwheat/csrf-auto-refresh/webpack/runtime/compat get default export","webpack://@davwheat/csrf-auto-refresh/webpack/runtime/define property getters","webpack://@davwheat/csrf-auto-refresh/webpack/runtime/hasOwnProperty shorthand","webpack://@davwheat/csrf-auto-refresh/webpack/runtime/make namespace object","webpack://@davwheat/csrf-auto-refresh/external root \"flarum.core.compat['forum/app']\"","webpack://@davwheat/csrf-auto-refresh/./src/forum/index.ts"],"sourcesContent":["// The require scope\nvar __webpack_require__ = {};\n\n","// getDefaultExport function for compatibility with non-harmony modules\n__webpack_require__.n = (module) => {\n\tvar getter = module && module.__esModule ?\n\t\t() => (module['default']) :\n\t\t() => (module);\n\t__webpack_require__.d(getter, { a: getter });\n\treturn getter;\n};","// define getter functions for harmony exports\n__webpack_require__.d = (exports, definition) => {\n\tfor(var key in definition) {\n\t\tif(__webpack_require__.o(definition, key) && !__webpack_require__.o(exports, key)) {\n\t\t\tObject.defineProperty(exports, key, { enumerable: true, get: definition[key] });\n\t\t}\n\t}\n};","__webpack_require__.o = (obj, prop) => (Object.prototype.hasOwnProperty.call(obj, prop))","// define __esModule on exports\n__webpack_require__.r = (exports) => {\n\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n\t}\n\tObject.defineProperty(exports, '__esModule', { value: true });\n};","const __WEBPACK_NAMESPACE_OBJECT__ = flarum.core.compat['forum/app'];","import app from 'flarum/forum/app';\n\ninterface ICsrfResponse {\n  data: {\n    attributes: { token: string };\n    id: number;\n    type: 'csrf-auto-refreshes';\n  };\n}\n\napp.initializers.add('davwheat/csrf-auto-refresh', () => {\n  // attempt keep alive 4 times before session expiry\n  const keepAliveInterval = (parseInt(app.forum.attribute('sessionLifetimeMins')) * 60 * 1000) / 4;\n\n  // POST to keep session token alive\n  (window as any).__davwheat_csrf_auto_refresh_interval = setInterval(() => {\n    app\n      .request<ICsrfResponse>({ url: app.forum.attribute('apiUrl') + '/csrf-refresh', method: 'POST' })\n      .then((response) => {\n        const csrfToken = response.data.attributes.token;\n\n        app.session.csrfToken = csrfToken;\n      })\n      .catch((e) => {\n        console.group(`[davwheat/csrf-auto-refresh] Failed to keep CSRF token alive.`);\n        console.error(e);\n        console.groupEnd();\n      });\n  }, keepAliveInterval);\n});\n"],"names":["__webpack_require__","module","getter","__esModule","d","a","exports","definition","key","o","Object","defineProperty","enumerable","get","obj","prop","prototype","hasOwnProperty","call","Symbol","toStringTag","value","flarum","core","compat","app","keepAliveInterval","parseInt","window","__davwheat_csrf_auto_refresh_interval","setInterval","url","method","then","response","csrfToken","data","attributes","token","e","console","group","error","groupEnd"],"sourceRoot":""}